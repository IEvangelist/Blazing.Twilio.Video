@page "/"

<MudPaper Width="300px">
    <MudList Clickable="true" @bind-SelectedItem="@_selectedRoom" 
        @bind-SelectedValue="@_activeRoom">
        <MudListSubheader>
            Room:
            <MudChip Color="Color.Secondary">
                @(_activeRoom ?? "default") 
                (<sup></sup>total rooms @(_rooms?.Count.ToString() ?? "0"))
            </MudChip>
        </MudListSubheader>
        @if (_rooms is { Count: > 0 })
        {
            foreach (var room in _rooms!)
            {
                <MudListItem Text="@room.Name" Value="@room.Id" />
            }
        }

        <MudListItem Text="Sparkling Water" Value="1" />
        <MudListItem Text="Teas">
            <NestedList>
                <MudListItem Text="Earl Grey" Value="2" />
                <MudListItem Text="Matcha" Value="3" />
                <MudListItem Text="Pu'er" Value="4" />
            </NestedList>
        </MudListItem>
        <MudListItem Text="Coffees">
            <NestedList>
                <MudListItem Text="Irish Coffee" Value="5" />
                <MudListItem Text="Double Espresso" Value="6" />
                <MudListItem Text="Cafe Latte" Value="7" />
            </NestedList>
        </MudListItem>
    </MudList>
</MudPaper>

<!--
<div class="row h-100 pt-5">
    <div class="col-3">
        <div class="jumbotron p-4">
            <h5><i class="fas fa-video"></i> Rooms</h5>
            <div class="list-group">
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="input-group">
                        <input type="text" class="form-control form-control-lg"
                               placeholder="Room name" aria-label="Room Name" disabled="@(ActiveCamera is null)"
                               @bind="_roomName" @onkeydown="@(async args => await TryAddRoom(args))" />
                        <div class="input-group-append">
                            <button class="btn btn-lg twilio-btn-red"
                                    disabled="@(ActiveCamera is null || _roomName is null)"
                                    @onclick="@(async args => await TryAddRoom(args))">
                                <i class="far fa-plus-square" aria-label="Create room"></i> Create
                            </button>
                        </div>
                    </div>
                </div>
                @if (!(_rooms?.Any() ?? false))
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <p class="lead mb-0">
                            Add a room to begin. Other online participants can join or create rooms.
                        </p>
                    </div>
                }
                else
                {
                    @foreach (var room in _rooms!)
                    {
                        <a href="#" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center
                           @(room.Name == _activeRoom ? "active" : null)"
                           @onclick="@(async _ => await TryJoinRoom(room.Name))">
                            @room.Name
                            <span class="badge badge-primary badge-pill">
                                @($"{room.ParticipantCount} / {room.MaxParticipants}")
                            </span>
                        </a>
                    }
                }

                @if (_activeRoom != null)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <button class="btn btn-lg twilio-btn-red w-100" @onclick="@(async _ => await OnLeaveRoom())">Leave Room?</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-9">
        <div id="participants" class="participants-grid">
            <div class="embed-responsive embed-responsive-16by9">
                <div id="camera" class="embed-responsive-item"></div>
            </div>
        </div>
    </div>
</div>

-->